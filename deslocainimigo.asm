ORG 0000H
	JMP INICIO
ORG 0100H


INICIO:
	MOV A, PRIMEIRA_VEZ
	JNZ JA_INICIOU
	;CALL INICIALIZA_INIMIGOS
JA_INICIOU: 
	CALL MOVE_INIMIGOS

MOVE_INIMIGOS:	
	CALL ATUALIZA_DIRECAO
	RET

DIRECAO_INIMIGOS BIT 05H   ;;; ESQUERDA 1, DIREITA 0
MUDOU_DIRECAO BIT 06H
GAME_OVER		BIT	07H

DESLOCAMENTO_INIMIGO DATA 50H
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;; FUNÇÃO QUE MOVE OS INIMIGOS DE ACORDO ;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MOVE_MEMORIA_INIMIGOS:

	
	JB DIRECAO_INIMIGOS, ATUALMENTE_ESQUERDA
	;JMP	ATUALMENTE_DIREITA
	
	ATUALMENTE_DIREITA:
		; PROCURA O MAIOR X
			MOV A, MAIOR_X												  ;;QUE FAZ ESSAS LINHAS MANOOO?
			ADD A, DESLOCAMENTO_INIMIGO 
			SUBB A, #116D ; TAMANHO MÁXIMO DO x MENOS TAMANHO DA NAVE = 116
			JC CONTINUA_DESLOCAMENTO

			SETB DIRECAO_INIMIGOS	  ;PASSOU DO MÁXIMO DA TELA, SÓ ANDA UMMA LINHA PRÁ BAIXO E MUDA A DIRECAO
			SETB TROCOU_DIRECAO
			JMP	CONTINUA_DESLOCAMENTO
	
	ATUALMENTE_ESQUERDA:
		; PROCURA O MENOR X
			MOV A, MENOR_X
			SUBB A, DESLOCAMENTO_INIMIGO 
			JNC CONTINUA_DESLOCAMENTO            	 ; SE BAIXOU DE ZERO ENTÃO PASSOU
			CLR DIRECAO_INIMIGOS					  ;FAZ ELE IR PARA A LINHA DE BAIXO
			SETB TROCOU_DIRECAO
			
	CONTINUA_DESLOCAMENTO:
		
			JB TROCOU_DIRECAO, MUDA_LINHA 	  ;;SE TROCOU DE DIREÇÃO CHAMA A FUNÇÃO QUE MUDA A LINHA
			CALL MOVE_MEMORIA_TODOS_INIMIGOS_VIVOS	   ;;SE NÃO, CHAMA A FUNÇÃO QUE MOVE OS CARAS
			JMP FIM_MOVIMENTACAO

  MUDA_LINHA:
  	CALL MUDA_LINHA_MEMORIA_TODOS_INIMIGOS_VIVOS

	FIM_MOVIMENTACAO:
	RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;; FIM DA FUNÇÃO QUE MOVE OS INIMIGOS, DE ACORDO
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;; FUNÇÃO QUE MOVE OS INIMIGOS HORIZONTALMENTE NA MEMÓRIA
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
MOVE_MEMORIA_TODOS_INIMIGOS_VIVOS:
	PUSH AR0
	PUSH AR1
	PUSH AR2
	MOV R1, NUMERO_INIMIGOS	
	MOV R0, #ENEMIES
ONE_MORE_ENEMY:	
	MOV A, @R0
	MOV R2, A
	MOV A, #0FFH ;;JÁ ESTA MORTO
	XRL A, R2
	JZ MOVE_PROXIMO_INIMIGO

	MOV A, R2
	JB DIRECAO_INIMIGOS, MOVE_ESQUERDA

move_direita:	
	ADD A, DESLOCAMENTO_INIMIGO
	MOV @R0, A					 ;;MUDA O X DO INIMIGO
	JMP MOVE_PROXIMO_INIMIGO

move_esquerda: 
		CLR C
		SUBB A, DESLOCAMENTO_INIMIGO
		MOV @R0, A					 ;;MUDA O X DO INIMIGO

MOVE_PROXIMO_INIMIGO:
	INC R0
	INC R0 ;;VAI PARA O X DO INIMIGO SEGINTE
	DJNZ R1, ONE_MORE_ENEMY	 ;;MUDAR
	
	POP AR2
	POP AR1
	POP AR0
 RET
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;;;;;;;;;;;;;;; FIM DA FUNÇÃO QUE MOVE OS INIMIGOS NA MEMORIA, HORIZONTALMENTE
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;; FUNÇÃO QUE FAZ OS INIMIGOS IREM OARA A LINHA DE BAIXO
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

MUDA_LINHA_MEMORIA_TODOS_INIMIGOS_VIVOS:
	PUSH AR0
	PUSH AR1
	PUSH AR2
	MOV R1, NUMERO_INIMIGOS	
	MOV R0, #ENEMIES
	INC R0 	;APONTA PARA O Y
ONE_MORE_ENEMY:	
	MOV A, @R0
	MOV R2, A
	MOV A, #0FFH ;;JÁ ESTA MORTO
	XRL A, R2
	JZ MOVE_PROXIMO_INIMIGO

	MOV A, R2
	ADD A, #01H ;VAI PARA A LINHA DE BAIXO
		
	MOV @R0, A					 ;;MUDA O X DO INIMIGO
	CJNE A, #07H, MOVE_PROXIMO_INIMIGO	  ;CASO SEJA A LINHA 7, É GAME OVER MAN

INDICA_GAME_OVER:
		SETB GAME_OVER
		POP AR2
		POP AR1
		POP AR0
 		RET				;VOLTA IMEDIATAMENTE E NEM PRECISA MAIS ESCREVER, JÁ MATA O BIXO E DEU MANO. E DEU
MOVE_PROXIMO_INIMIGO:
	INC R0
	INC R0 ;;VAI PARA O y DO INIMIGO SEGINTE
	DJNZ R1, ONE_MORE_ENEMY	 ;;MUDAR
	
	POP AR2
	POP AR1
	POP AR0
 	RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;; FIM DA FUNÇÃO QUE FAZ OS INIMIGOS IREM PARA A LINHA DE BAIXO


 VIVOS:
 	MOV A, #ENEMIES
	MOV R0, A	                   ;PONTEIROS PARA ENIMIES
	MOV R1, A
	MOV R2, #00H 			  ; R2 CONTA QUANTAS VEZES PASSOU (8 VEZES POIS 8 INIMIGOS)
	MOV NUMERO_DE_VIVOS, #00H	
    BUSCA_VIVOS:
		MOV A, @R0
		CJNE A, #0FFH, NAO_MORREU
		INC R0
		INC R0
		INC R2
		CJNE R2 , #08H, BUSCA_VIVOS 
		JMP FIM_DE_VIVOS
	 NAO_MORREU:

		 MOV A, NUMERO_DE_VIVOS
		 INC A
		 MOV NUMERO_DE_VIVOS, A


	 	MOV A,@R0	;PASSO X
		MOV @R1, A
		MOV MEU_AUX, A 
		CALL F_MAIOR_X
		CALL F_MENOR_X


	 	INC R0 ; INCREMENTO R0 E R1
		INC R1

		MOV A,@R0 ;PASSO Y
		MOV @R1, A
		MOV MEU_AUX, A
		CALL F_MENOR_Y

		INC R2
		CJNE R2 , #08H,  BUSCA_VIVOS
		JMP FIM_DE_VIVOS

		
	FIM_DE_VIVOS:

	MOV A, #08H
	SUBB A, NUMERO_DE_VIVOS

	APAGA_COPIAS:		; APAGA OS INIMIGOS DEIXADOS PARA TRAZ DA TABELA
	INC R1
	INC R1
	MOV @R1, #0FFH
	DEC A
	JNZ APAGA_COPIAS

	

	RET


F_MAIOR_X:
	MOV A, MAIOR_X
	SUBB A, MEU_AUX
	JNC NAO_TROCA_F_MAIOR_X
	MOV A, MEU_AUX
	MOV MAIOR_X, A
	NAO_TROCA_F_MAIOR_X:
	RET

F_MENOR_X:
	MOV A, MENOR_X
	SUBB A, MEU_AUX
	JC NAO_TROCA_F_MENOR_X
	MOV A, MEU_AUX
	MOV MENOR_X, A
	NAO_TROCA_F_MENOR_X:
	RET

F_MENOR_Y:
	MOV A, MENOR_Y
	SUBB A, MEU_AUX
	JC NAO_TROCA_F_MENOR_Y
	MOV A, MEU_AUX
	MOV MENOR_Y, A
	NAO_TROCA_F_MENOR_Y:
	RET







			 
	

	

INICIALIZA_INIMIGOS:
											  ; PREENCHE OS DADOS DOS INIMIGOS
	MOV PRIMEIRA_VEZ, #01H   ; DIZ QUE JA INICIO
		
	MOV A,#ENEMIES ;COMECA COM O VALOR DA X DO INIMIGO
	MOV R0, A
	MOV DPTR,#TAB_INIMIGOS
	CLR A
	MOV R1, A
	
	LOOP_INICIA_INIMIGOS:	
	MOV A, R1
	MOVC A,@A + DPTR
	MOV @R0, A
	INC R0
	INC R1
	CJNE R1, #010H,LOOP_INICIA_INIMIGOS ; 10H EH IGUAL A 16= 2*8 INIMIGOS  
	RET





TAB_INIMIGOS:
	;COORDENADAS DO VEICULO:
	;      X,    Y ,				   
	DB 00H, 00H   
	DB 0BH, 00H
	DB	 16H, 00H
	DB	 21H, 00H
	DB 00H, 01H   
	DB 0BH, 01H
	DB	 16H, 01H
	DB	 21H, 01H


PLAYER DATA 30H
PLAYERX DATA 30H
PLAYERY DATA 31H
PLAYERLIFE DATA 32H

ENEMIES DATA 33H						   ;X = 33h y= 34H , SE NA POSICÇÃO FOR IGUAL A FFH ENTAO TA MORTO
;TABELA DE INIMIGOS						   ; Y VAI DE 0 5 COM DESLOCAMENTO DE 1
													   ; X VAI DE 0 127 COM DESLOCAMENTO NÃO ESTABELECIDO
													   ; CADA BONECO OCUPA 11 pix isso da 43
LAST_ENEMY DATA 41H 					;X = 41H T=42H

PLAYER_SHOTS DATA 43H
ENEMY_SHOTS DATA 44H
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;MINHAS ADIÇOES
PRIMEIRA_VEZ DATA 45H
INIMIGOS_DIRECAO DATA 46H
MAIOR_X	 DATA  47H
MENOR_X	DATA 48H
MENOR_Y DATA 49H
NUMERO_DE_VIVOS DATA 4AH
MEU_AUX DATA 4BH
FLAG_TROCOU_DIRECAO DATA 4CH
FLAG_GAME_OVER DATA 4DH
END
